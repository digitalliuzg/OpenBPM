#ifndef __BEATDETECT_H__
#define __BEATDETECT_H__

#ifdef __cplusplus
extern "C" {
#endif

#define DECIMATION_FACTOR 4	// decimation as first stage	
#define SMOOTHING_LAG 5000	// 5000 samples ~0.25 sec ~ > 240BPM

#define ASCENDING	 1
#define DESCENDING	-1

static float zero = 0.0;


//
// lowpass filters (for decimation)
//
#if DECIMATION_FACTOR == 8

// cutoff @ 0.125 - (for 8:1 decimation) 
static uint32_t decimFilterLength = 31;
static float decimFilter[] = {-0.00079748210548497,-0.001668260759084319,-0.003043065900390364,-0.004919881647958132,-0.006764083363438459,-0.007474439347896203,-0.005554506553082615,0.0005310639827363875,0.01189801708832276,0.02880653102722307,0.05037999923996079,0.0745790491641853,0.09846759480580915,0.1187291560481656,0.1323205022981653,0.1371067447813086,0.1323205022981653,0.1187291560481656,0.09846759480580919,0.07457904916418531,0.0503799992399608,0.02880653102722307,0.01189801708832277,0.0005310639827363877,-0.005554506553082617,-0.007474439347896205,-0.006764083363438455,-0.004919881647958135,-0.003043065900390362,-0.001668260759084319,-0.00079748210548497};

#elif DECIMATION_FACTOR == 4 

// cutoff @ 0.25 - (for 4:1 decimation) 
static uint32_t decimFilterLength = 31;
static float decimFilter[] = {-0.001254720175223717,-0.002046045471576626,-0.001989697400499116,0.0001639055065901997,0.004909372591347936,0.009863749655743279,0.009671795262031732,-0.000480350559535768,-0.01931100937886123,-0.03618218770114837,-0.03412511644860989,0.000827865919175447,0.06905774109057508,0.1528117930605278,0.2221151394568901,0.2490042341791239,0.2221151394568901,0.1528117930605278,0.06905774109057508,0.0008278659191754472,-0.0341251164486099,-0.03618218770114837,-0.01931100937886124,-0.0004803505595357682,0.009671795262031734,0.009863749655743281,0.004909372591347934,0.0001639055065901998,-0.001989697400499115,-0.002046045471576626,-0.001254720175223717};

#elif DECIMATION_FACTOR == 2

// cutoff @ 0.5 - (for 2:1 decimation) 
static uint32_t decimFilterLength = 31;
static float decimFilter[] = {-0.001699407966943429,8.809462949473112e-05,0.002936139518157586,-0.000164203558090735,-0.006728373954254795,0.0003032614901005837,0.01409206057466288,-0.0004812240457781219,-0.0267842527722331,0.0006673198825076398,0.04910122294866149,-0.0008293713394910021,-0.0969476664041713,0.0009393582476245164,0.3156578754884581,0.4998923272303171,0.3156578754884581,0.0009393582476245163,-0.09694766640417131,-0.0008293713394910023,0.04910122294866151,0.00066731988250764,-0.02678425277223312,-0.0004812240457781221,0.01409206057466289,0.0003032614901005838,-0.006728373954254793,-0.0001642035580907351,0.002936139518157584,8.809462949473112e-05,-0.001699407966943429};

#else

#define DECIMATION_FACTOR 1

#endif
	
void DoBeatDetect(float signal[], uint32_t signalLength, int beats[], int *num_beats);
void GetMoments(float data[], int length, float *mean, float *var);

#ifdef __cplusplus
}
#endif

#endif	// __BEATDETECT_H__